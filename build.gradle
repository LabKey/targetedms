import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.ExternalDependency

plugins {
   id 'org.labkey.build.module'
}

dependencies
{
   BuildUtils.addExternalDependency(
           project,
           new ExternalDependency(
                   "com.google.protobuf:protobuf-java:${googleProtocolBufVersion}",
                   "Protocol Buffers",
                   "Github Google",
                   "https://github.com/google/protobuf/releases",
                   "Custom",
                   "https://github.com/google/protobuf/blob/master/LICENSE",
                   "Binary data parsing"
           )
   )
   BuildUtils.addExternalDependency(
           project,
           new ExternalDependency(
                   "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}",
                   "SQLite JDBC Driver",
                   "bitbucket.org",
                   "https://bitbucket.org/xerial/sqlite-jdbc/wiki/Home",
                   ExternalDependency.APACHE_2_LICENSE_NAME,
                   ExternalDependency.APACHE_2_LICENSE_URL,
                   "SQLite JDBC Driver"
           )
   )
   BuildUtils.addExternalDependency(
           project,
           new ExternalDependency(
                   "org.apache.commons:commons-math3:${commonsMath3Version}",
                   "Commons Math",
                   "Apache",
                   "http://commons.apache.org/math/",
                   ExternalDependency.APACHE_2_LICENSE_NAME,
                   ExternalDependency.APACHE_2_LICENSE_URL,
                   "Lightweight, self-contained mathematics and statistics components"
           )
   )
   BuildUtils.addExternalDependency(
           project,
           new ExternalDependency(
                   "org.jfree:jcommon:${jcommonVersion}",
                   "JFree Chart",
                   "JFreeChart",
                   "http://www.jfree.org/jfreechart/",
                   ExternalDependency.LGPL_LICENSE_NAME,
                   ExternalDependency.LGPL_LICENSE_URL,
                   "PNG encoder"
           )
   )
   BuildUtils.addLabKeyDependency(project: project, config: "implementation", depProjectPath:  BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "ms2"), depProjectConfig: "apiJarFile")
   BuildUtils.addLabKeyDependency(project: project, config: "jspImplementation", depProjectPath: BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "ms2"), depProjectConfig: "apiJarFile")
   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "ms2"), depProjectConfig: "published", depExtension: "module")
   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "experiment"), depProjectConfig: "published", depExtension: "module")

   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "protein"), depProjectConfig: "published", depExtension: "module")
   BuildUtils.addLabKeyDependency(project: project, config: "implementation", depProjectPath: BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "protein"), depProjectConfig: "apiJarFile")
   BuildUtils.addLabKeyDependency(project: project, config: "jspImplementation", depProjectPath: BuildUtils.getCommonAssayModuleProjectPath(project.gradle, "protein"), depProjectConfig: "apiJarFile")

   compileOnly "org.projectlombok:lombok:${lombokVersion}"
   annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

sourceSets {
   main {
      resources {
         srcDirs = ['src'] // src is included because it contains some proto files
         exclude '**/*.java'
         exclude '**/*.jsp'
      }
   }
}
